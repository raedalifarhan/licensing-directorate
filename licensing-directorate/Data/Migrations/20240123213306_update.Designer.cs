// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using licensing_directorate.Data;

#nullable disable

namespace licensing_directorate.Data.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20240123213306_update")]
    partial class update
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("licensing_directorate.Models.Branch", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("CompanyId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Manager")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CompanyId");

                    b.ToTable("Branches");
                });

            modelBuilder.Entity("licensing_directorate.Models.Company", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CommercialRegistrationNo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CompanyName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CompanyType")
                        .HasColumnType("int");

                    b.Property<string>("ComplianceOfficer")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ImageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Info")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NamesOfPartners")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OldComericalName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ViolationsAndPenalties")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Companies");
                });

            modelBuilder.Entity("licensing_directorate.Models.LicenceDetails", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<double?>("ApplicationFee")
                        .HasColumnType("float");

                    b.Property<double>("CompanyCapital")
                        .HasColumnType("float");

                    b.Property<Guid>("CompanyId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateOfApplication")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateOfPreliminaryApproval")
                        .HasColumnType("datetime2");

                    b.Property<double?>("FinancialGuarantee")
                        .IsRequired()
                        .HasColumnType("float");

                    b.Property<double?>("LicenceFee")
                        .IsRequired()
                        .HasColumnType("float");

                    b.Property<string>("LicenceNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LicenceRequestDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("LicenceRequestStatus")
                        .HasColumnType("int");

                    b.Property<int>("LicenceStatus")
                        .HasColumnType("int");

                    b.Property<string>("LicenseFileAttached")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Notes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("CompanyId")
                        .IsUnique();

                    b.ToTable("LicenceDetails");
                });

            modelBuilder.Entity("licensing_directorate.Models.Branch", b =>
                {
                    b.HasOne("licensing_directorate.Models.Company", "Company")
                        .WithMany("Branches")
                        .HasForeignKey("CompanyId");

                    b.Navigation("Company");
                });

            modelBuilder.Entity("licensing_directorate.Models.LicenceDetails", b =>
                {
                    b.HasOne("licensing_directorate.Models.Company", "Company")
                        .WithOne("LicenceDetails")
                        .HasForeignKey("licensing_directorate.Models.LicenceDetails", "CompanyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Company");
                });

            modelBuilder.Entity("licensing_directorate.Models.Company", b =>
                {
                    b.Navigation("Branches");

                    b.Navigation("LicenceDetails")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
